defmodule ParseAddress.US.State do
  @moduledoc """
  Maps lowercased US state and territory names to their canonical two-letter postal abbreviations.

  """
  def state_code, do: %{
    "alabama"                        => "AL",
    "alaska"                         => "AK",
    "american samoa"                 => "AS",
    "arizona"                        => "AZ",
    "arkansas"                       => "AR",
    "california"                     => "CA",
    "colorado"                       => "CO",
    "connecticut"                    => "CT",
    "delaware"                       => "DE",
    "district of columbia"           => "DC",
    "federated states of micronesia" => "FM",
    "florida"                        => "FL",
    "georgia"                        => "GA",
    "guam"                           => "GU",
    "hawaii"                         => "HI",
    "idaho"                          => "ID",
    "illinois"                       => "IL",
    "indiana"                        => "IN",
    "iowa"                           => "IA",
    "kansas"                         => "KS",
    "kentucky"                       => "KY",
    "louisiana"                      => "LA",
    "maine"                          => "ME",
    "marshall islands"               => "MH",
    "maryland"                       => "MD",
    "massachusetts"                  => "MA",
    "michigan"                       => "MI",
    "minnesota"                      => "MN",
    "mississippi"                    => "MS",
    "missouri"                       => "MO",
    "montana"                        => "MT",
    "nebraska"                       => "NE",
    "nevada"                         => "NV",
    "new hampshire"                  => "NH",
    "new jersey"                     => "NJ",
    "new mexico"                     => "NM",
    "new york"                       => "NY",
    "north carolina"                 => "NC",
    "north dakota"                   => "ND",
    "northern mariana islands"       => "MP",
    "ohio"                           => "OH",
    "oklahoma"                       => "OK",
    "oregon"                         => "OR",
    "palau"                          => "PW",
    "pennsylvania"                   => "PA",
    "puerto rico"                    => "PR",
    "rhode island"                   => "RI",
    "south carolina"                 => "SC",
    "south dakota"                   => "SD",
    "tennessee"                      => "TN",
    "texas"                          => "TX",
    "utah"                           => "UT",
    "vermont"                        => "VT",
    "virgin islands"                 => "VI",
    "virginia"                       => "VA",
    "washington"                     => "WA",
    "west virginia"                  => "WV",
    "wisconsin"                      => "WI",
    "wyoming"                        => "WY", 
  }

  @doc """
  Maps two-digit FIPS-55 US state and territory codes (including the leading zero!) as found in TIGER/Line to
  the state's canonical two-letter postal abbreviation.

  """
  def state_fips, do: %{
    "01" => "AL",
    "02" => "AK",
    "04" => "AZ",
    "05" => "AR",
    "06" => "CA",
    "08" => "CO",
    "09" => "CT",
    "10" => "DE",
    "11" => "DC",
    "12" => "FL",
    "13" => "GA",
    "15" => "HI",
    "16" => "ID",
    "17" => "IL",
    "18" => "IN",
    "19" => "IA",
    "20" => "KS",
    "21" => "KY",
    "22" => "LA",
    "23" => "ME",
    "24" => "MD",
    "25" => "MA",
    "26" => "MI",
    "27" => "MN",
    "28" => "MS",
    "29" => "MO",
    "30" => "MT",
    "31" => "NE",
    "32" => "NV",
    "33" => "NH",
    "34" => "NJ",
    "35" => "NM",
    "36" => "NY",
    "37" => "NC",
    "38" => "ND",
    "39" => "OH",
    "40" => "OK",
    "41" => "OR",
    "42" => "PA",
    "44" => "RI",
    "45" => "SC",
    "46" => "SD",
    "47" => "TN",
    "48" => "TX",
    "49" => "UT",
    "50" => "VT",
    "51" => "VA",
    "53" => "WA",
    "54" => "WV",
    "55" => "WI",
    "56" => "WY",
    "72" => "PR",
    "78" => "VI", 
  }

  def fips_state, do: Enum.reduce(state_fips(), %{}, fn {k, v}, acc -> Map.merge(acc, %{v => k}) end)
end
